{"version":3,"sources":["Row.js","requests.js","axios.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","settrailerUrl","useEffect","a","axios","get","request","data","results","fetchData","console","log","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActioMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentries","instance","create","baseUrl","Banner","str","n","setMovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a937e84.chunk.js","sourcesContent":["import axios from 'axios';\r\nimport React,{useState,useEffect} from 'react'\r\nimport \"./Row.css\";\r\nimport Youtube from \"react-youtube\"\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\nconst baseUrl = \"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    const [trailerUrl, settrailerUrl] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(`https://api.themoviedb.org/3${fetchUrl}`);\r\n            //console.log(request.data.results);\r\n            setMovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n        }, [fetchUrl])\r\n       console.log(movies);\r\n\r\n       const opts={\r\n           height:\"390\",\r\n           width:\"100%\",\r\n           playerVars:{\r\n               autoplay:1,\r\n           },\r\n       };\r\n\r\n       const handleClick =(movie) => {\r\n           if(trailerUrl){\r\n               settrailerUrl('');\r\n           }else{\r\n               movieTrailer(movie?.name || \"\")\r\n               .then( (url) => {\r\n                   const urlParams = new URLSearchParams(new URL(url).search);\r\n                   settrailerUrl(urlParams.get(\"v\"));\r\n                \r\n               })\r\n               .catch((error) => console.log(error));\r\n           }\r\n\r\n       }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n            <div className={`row__posters ${isLargeRow && \"row__postersLarge\"}`}>\r\n                {movies.map(movie =>  (\r\n                    <img \r\n                    key={movie.id}\r\n                    onClick={()=>handleClick(movie)}\r\n                    src={`${baseUrl}${isLargeRow ? movie.poster_path:movie.backdrop_path}`} alt = {movie.name}/>\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}></Youtube>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n\r\n\r\n","const API_KEY = \"7357deb34dc60c4989b6212cb1c22b68\";\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&language=en-US&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActioMovies: `/discover/movie?api_key=${API_KEY}&language=en-US&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&language=en-US&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&language=en-US&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&language=en-US&with_genres=10749`,\r\n    fetchDocumentries: `/discover/movie?api_key=${API_KEY}&Â language=en-US&with_genres=99`,\r\n}\r\nexport default requests;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseUrl: \"https://api.themoviedb.org/3\"\r\n});\r\nexport default instance;","import React,{useState,useEffect} from 'react'\r\nimport axios from './axios'\r\nimport requests from './requests'\r\nimport \"./Banner.css\"\r\n\r\nfunction Banner() {\r\n    const [movie, setMovie] = useState([]);\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request = await axios.get(`https://api.themoviedb.org/3${requests.fetchNetflixOriginals}`);\r\n            setMovie(\r\n                request.data.results[Math.floor(Math.random() * request.data.results.length - 1)\r\n                ]\r\n                );\r\n            return request;\r\n\r\n        }\r\n        fetchData();\r\n        \r\n    }, []);\r\n    console.log(movie);\r\n\r\n    function truncate(str,n){\r\n        return str?.length>n ? str.substr(0,n-1) + \"...\":str;\r\n    }\r\n\r\n\r\n    return (\r\n        <header className=\"Banner\" style={{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage:`url(https://image.tmdb.org/t/p/original/${movie?.backdrop_path})`,\r\n            backgroundPosition:\"center center\",\r\n            \r\n\r\n        }}>\r\n            <div className=\"Banner-content\">\r\n                <h1 className=\"Banner-title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n                <div className=\"Banner_bottons\">\r\n                    <button className=\"Banner_Botton\">Play</button>\r\n                    <button className=\"Banner_Botton\">My List</button>\r\n                </div>\r\n                <h1 className=\"Banner_desc\">\r\n                    {truncate(movie?.overview, 150)}\r\n                </h1>\r\n            </div>\r\n            <div className=\"Banner-faded\"></div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Banner\r\n","import React, {useEffect, useState} from 'react'\r\nimport \"./nav.css\"\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false);\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", () => {\r\n            if(window.scrollY>100){\r\n                handleShow(true);\r\n\r\n            }else handleShow(false);\r\n        })\r\n        return () => {\r\n            window.removeEventListener(\"scroll\")\r\n        };\r\n    }, [])\r\n    return (\r\n        <div className={`Nav ${show && \"nav_black\"}`}>\r\n            <img className=\"Nav-logo\" src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\" alt=\"Netflix Logo\"></img>\r\n            <img className=\"Nav-Avatar\" src=\"https://upload.wikimedia.org/wikipedia/commons/a/a5/Aiga_uparrow_inv.png\" alt=\"N\"></img>\r\n        </div>\r\n    )\r\n}\r\nexport default Nav\r\n","import './App.css'\nimport React from 'react'\nimport Row from './Row'\nimport requests from './requests'\nimport Banner from './Banner'\nimport Nav from './Nav'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav></Nav>\n      <Banner></Banner>\n      <div className=\"cont\">\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow=\"true\" />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated}></Row>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActioMovies}></Row>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}></Row>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}></Row>\n      <Row title=\"Romantic Movies\" fetchUrl={requests.fetchRomanceMovies}></Row>\n      <Row title=\"Documentries\" fetchUrl={requests.fetchDocumentries}></Row>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}